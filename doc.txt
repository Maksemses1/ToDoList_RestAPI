
### UserController

1. **Get All Users**
   - **Endpoint**: `GET localhost:8081/api/v1/user/getUsers`
   - **Description**: Retrieve all users from the database.

2. **Save User**
   - **Endpoint**: `POST localhost:8081/api/v1/user/save`
   - **Body**: "UserEntity" -
     - `login`: String
     - `password`: String

3. **Get User by ID**
   - **Endpoint**: `GET localhost:8081/api/v1/user`
   - **Param**: `id` - ID of the user

4. **Delete User**
   - **Endpoint**: `DELETE localhost:8081/api/v1/user/del/{id}`
   - **PathVariable**: `id` - ID of the user

---

### ToDoController

1. **Create Task**
   - **Endpoint**: `POST localhost:8081/api/v1/todo`
   - **Body**: "ToDoEntity" -
     - `title`: String
     - `description`: String
     - `completed`: boolean
   - **Param**: `listId` - ID of the list to which the task is attached

2. **Update Task Completion Status**
   - **Endpoint**: `PUT localhost:8081/api/v1/todo/completed`
   - **Param**: `id` - ID of the task

3. **Delete Task**
   - **Endpoint**: `DELETE localhost:8081/api/v1/todo/delete`
   - **Param**: `id` - ID of the task

4. **Get Task by ID**
   - **Endpoint**: `GET localhost:8081/api/v1/todo`
   - **Param**: `id` - ID of the task

---

### ToDoListController

1. **Create Task List**
   - **Endpoint**: `POST localhost:8081/api/v1/todolist`
   - **Body**: "ToDoListEntity" -
     - `title`: String
   - **Param**: `userId` - ID of the user to whom the task list is created

2. **Get Task List by ID**
   - **Endpoint**: `GET localhost:8081/api/v1/todolist`
   - **Param**: `id` - ID of the task list

3. **Delete Task List**
   - **Endpoint**: `DELETE localhost:8081/api/v1/todolist`
   - **Param**: `id` - ID of the task list